---

- name: apt | Install openvpn requirements
  apt: name={{item}}
  with_items:
    - openvpn
    - udev
    - openssl
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: yum | Install openvpn requirements
  yum: name={{item}}
  with_items:
    - openvpn
    - udev
    - openssl
  when: ansible_os_family == "RedHat" or ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

- name: Alpine | Install openvpn requirements
  apk: name={{item}}
  with_items:
    - openvpn
    - udev
    - openssl
  when: ansible_os_family == "Alpine"
- name: map local config to /etc/openvpn/openvpn.conf
  file: "src=/etc/openvpn/{{ inventory_hostname }}.conf dest=/etc/openvpn/openvpn.conf mode=0644 state=link"
  ignore_errors: true
  when: ansible_os_family == "Alpine"

- name: push configuration
  copy: src={{ item }} dest=/etc/openvpn/ mode=0400
  with_items: openvpn_config_files
  notify:
    - restart openvpn
    - restart openvpn synology
  when: openvpn_config_files is defined

- name: push keys
  copy: src={{ item }} dest=/etc/openvpn/keys/ mode=0400
  with_items: openvpn_config_keys
  notify:
    - restart openvpn
    - restart openvpn synology
  when: openvpn_config_keys is defined

- name: Create config for login/pass authenticated users
  template: src=openvpn-user.ovpn dest=/etc/openvpn/openvpn-{{ item.u }}.{{ openvpnclient_ext }} mode=0400
  with_items: openvpn_config_users
  notify:
    - restart openvpn
    - restart openvpn synology
  when: openvpn_config_users is defined

- blockinfile:
    dest: /etc/openvpn/keys/login-{{ item.u }}.txt
    mode: 0400
    create: yes
#    marker: ''
    block: |
      {{ item.u }}
      {{ item.p }}
  with_items: openvpn_config_users
  notify:
    - restart openvpn
    - restart openvpn synology
  when: openvpn_config_users is defined

